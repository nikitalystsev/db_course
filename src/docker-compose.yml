x-redis: &redis
  image: redis:latest
  environment:
    REDIS_PASSWORD: ${REDIS_PASSWORD}
    REDIS_USER: ${REDIS_USER}
    REDIS_USER_PASSWORD: ${REDIS_USER_PASSWORD}
  command: >
    sh -c '
      mkdir -p /usr/local/etc/redis &&
      echo "requirepass $REDIS_PASSWORD" > /usr/local/etc/redis/redis.conf &&
      echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
      echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
      echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" > /usr/local/etc/redis/users.acl &&
      redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
    '

services:
  ss-app:
    image: smartshopper:local
    container_name: ss-app
    ports:
      - "8000:8000"
    depends_on:
      ss-postgres:
        condition: service_healthy
      ss-redis:
        condition: service_started
      ss-cache:
        condition: service_started
    networks:
      - ss

  ss-postgres:
    image: postgres:latest
    container_name: ss-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
      - ${POSTGRES_DB_DATASETS_PATH}:/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ss

  ss-redis:
    <<: *redis
    container_name: ss-redis
    volumes:
      - ./.data/redis:/var/lib/redis
    expose:
      - 6380
    ports:
      - "6380:6379"
    networks:
      - ss

  ss-cache:
    <<: *redis
    container_name: ss-cache
    volumes:
      - ./.data/cache:/var/lib/redis
    expose:
      - 6382
    ports:
      - "6382:6379"
    networks:
      - ss

networks:
  ss:
    driver: bridge